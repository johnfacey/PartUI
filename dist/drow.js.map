{"version":3,"sources":["drow.js"],"names":["DrowElements","DrowJS","register","config","element","name","console","log","push","window","customElements","define","HTMLElement","setAttribute","init","props","shadow","attachShadow","mode","innerHTML","template","undefined","append","document","querySelector","replaceChild","shadowRoot","propName","getAttribute","slots","querySelectorAll","i","length","attr","oldValue","newValue","attribute","comp","getComp","watch","e","exports"],"mappings":"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","file":"drow.js","sourceRoot":"..\\src","sourcesContent":["/**\r\n * DrowJS Component - Simple Web Component Library for creating custom HTML Components.\r\n * @constructor\r\n * @see {@link http://github.com/drowjs|GitHub}\r\n */\r\nvar DrowElements = [];\r\nconst DrowJS = {\r\n  /**\r\n   * Registers a DrowJS Component.\r\n   * @param {object} config - Object used to define a DrowJS.\r\n   * @memberof DrowJS\r\n   * @example\r\n   *\r\n   * <my-comp prop1=\"Test\"></my-prop>\r\n   *\r\n   * var config = {\r\n   *   \"name\" : \"my-comp\",\r\n   *   \"props\": ['prop1','prop2'],\r\n   *   \"template\": `<b>Click for the timestamp</b><slot name=\"slot1\">Test Slot</slot>`,\r\n   *   \"init\" : function() {\r\n   *\r\n   *      let prop1 = this.getProp('prop1') ? this.getAttribute('prop1') : \"\";\r\n   *\r\n   *        this.getComp().addEventListener('click', e => {\r\n   *\t\t\tthis.getComp().querySelector(\"b\").innerHTML = new Date();\r\n   *\t\t});\r\n   *   },\r\n   *    watch : function(attribute) {\r\n   *        if (attribute.name == 'name') {\r\n   *           this.getComp().querySelector('b').textContent = `Hello, ${attribute.newValue}`;\r\n   *        }\r\n   *   }\r\n   * }\r\n   *\r\n   * DrowJS.register(config);\r\n   *\r\n   */\r\n  register(config) {\r\n    for (const element of DrowElements) {\r\n      if (element === config.name) {\r\n        console.log(`DrowJS ${config.name} already Registered`);\r\n        return;\r\n      }\r\n    }\r\n    DrowElements.push(config.name);\r\n    window.customElements.define(\r\n      config.name,\r\n      class extends HTMLElement {\r\n        static get observedAttributes() {\r\n          return [config.props];\r\n        }\r\n\r\n        constructor() {\r\n          super();\r\n          this.setAttribute(\"DrowJS-component\", true);\r\n          this.init = config.init;\r\n        }\r\n\r\n        connectedCallback() {\r\n          if (config.shadow) {\r\n            const shadowRoot = this.attachShadow({\r\n              mode: \"open\"\r\n            });\r\n          }\r\n\r\n          const elRoot = this;\r\n\r\n          this.innerHTML = `<DrowJS-wrapper>${\r\n            config.template\r\n          }</DrowJS-wrapper>`;\r\n\r\n          this.init();\r\n          if (config.append !== undefined && config.append !== \"\") {\r\n            document\r\n              .querySelector(\"head\")\r\n              .replaceChild(this, document.querySelector(\"head\"));\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Gets the Wrapper Element of a DrowJS Component.\r\n         * @instance\r\n         * @example\r\n         * this.getWrap().querySelector(\"b\");\r\n         */\r\n        getWrap() {\r\n          return this.shadowRoot.querySelector(\"DrowJS-wrapper\");\r\n        }\r\n\r\n        /**\r\n         * Gets a Property of a DrowJS Component.\r\n         * @property {string} propName - returns of Property used in Componenet.\r\n         * @returns {string} Property\r\n         * @instance\r\n         * @example\r\n         * this.getProp('prop1');\r\n         */\r\n        getProp(propName) {\r\n          return this.getAttribute(propName);\r\n        }\r\n\r\n        /**\r\n         * Gets the DrowJS Component.\r\n         * @returns DrowJS Component\r\n         * @instance\r\n         * @example\r\n         * this.getComp();\r\n         */\r\n        getComp() {\r\n          return this;\r\n        }\r\n\r\n        slots() {\r\n          var slots = document.querySelectorAll(\"[slot]\"); //find children with slot attributes\r\n          for (var i = 0; i < slots.length; i++) {\r\n            //var slot = slots[i];\r\n            //var slotName = slot.slot; //elements\r\n            // this.querySelector(\"#\"+slotName).appendChild(slot);\r\n          }\r\n        }\r\n\r\n        // Respond to attribute changes.\r\n        attributeChangedCallback(attr, oldValue, newValue) {\r\n          var attribute = {\r\n            name: attr,\r\n            oldValue: oldValue,\r\n            newValue: newValue,\r\n            comp: this.getComp()\r\n          };\r\n          try {\r\n            config.watch(attribute);\r\n          } catch (e) {}\r\n        }\r\n      }\r\n    );\r\n    console.log(`DrowJS ${config.name} Registered`);\r\n    return this;\r\n  }\r\n};\r\n\r\nexports.register = DrowJS.register;\r\n"]}